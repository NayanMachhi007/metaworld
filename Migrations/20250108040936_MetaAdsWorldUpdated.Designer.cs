// <auto-generated />
using System;
using Meta_Ads_World.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Meta_Ads_World.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250108040936_MetaAdsWorldUpdated")]
    partial class MetaAdsWorldUpdated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Meta_Ads_World.Data.AreaMst", b =>
                {
                    b.Property<int>("areaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("areaid"));

                    b.Property<string>("areaname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cityid")
                        .HasColumnType("int");

                    b.HasKey("areaid");

                    b.ToTable("AreaMsts");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.BrandCategoryMst", b =>
                {
                    b.Property<int>("bcategoryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bcategoryid"));

                    b.Property<string>("bcategoryname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("bcategorystatus")
                        .HasColumnType("bit");

                    b.HasKey("bcategoryid");

                    b.ToTable("BrandCategoryMst");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.BrandPaymentTransactionMst", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("contactno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("paymentbranduserid")
                        .HasColumnType("int");

                    b.Property<int>("paymentinstaid")
                        .HasColumnType("int");

                    b.Property<string>("paymentrecipt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transcationid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("paymentbranduserid");

                    b.HasIndex("paymentinstaid");

                    b.ToTable("BrandPaymentTransactionMsts");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.BrandRegistrationMst", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("areacode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bcontactno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bemail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bpassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("bstatus")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("BrandRegistrationMst");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.BrandYouTubePaymentTransactionMst", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("contactno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("paymentbranduserid")
                        .HasColumnType("int");

                    b.Property<string>("paymentrecipt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("paymentyoutubeid")
                        .HasColumnType("int");

                    b.Property<string>("transcationid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("paymentbranduserid");

                    b.HasIndex("paymentyoutubeid");

                    b.ToTable("brandYouTubePaymentTransactionMsts");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.CityMst", b =>
                {
                    b.Property<int>("cityid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cityid"));

                    b.Property<string>("cityname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stateid")
                        .HasColumnType("int");

                    b.HasKey("cityid");

                    b.ToTable("CityMsts");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.InstaPostBudgetMst", b =>
                {
                    b.Property<int>("instapostbudgetid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("instapostbudgetid"));

                    b.Property<int>("instacommentbudget")
                        .HasColumnType("int");

                    b.Property<int>("instalikebudget")
                        .HasColumnType("int");

                    b.Property<int>("instasavebudget")
                        .HasColumnType("int");

                    b.Property<int>("instasharebudget")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("instapostbudgetid");

                    b.ToTable("InstaPostBudgetMst");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.InstaPostMst", b =>
                {
                    b.Property<int>("instapostid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("instapostid"));

                    b.Property<int>("counter")
                        .HasColumnType("int");

                    b.Property<int>("instabranduserid")
                        .HasColumnType("int");

                    b.Property<bool>("instagrampostsharestatus")
                        .HasColumnType("bit");

                    b.Property<string>("instapostcomment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("instapostcommentstatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("instapostendingdate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("instapostlikestatus")
                        .HasColumnType("bit");

                    b.Property<string>("instapostsave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("instapostsavestatus")
                        .HasColumnType("bit");

                    b.Property<string>("instapostshare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("instapoststartingdate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("instapoststatus")
                        .HasColumnType("bit");

                    b.Property<string>("instaposttotallike")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instaposturl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("posttotalbudget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("instapostid");

                    b.HasIndex("instabranduserid");

                    b.ToTable("InstaPostMsts");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.QrCodeMst", b =>
                {
                    b.Property<int>("qrid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("qrid"));

                    b.Property<string>("qrpath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("qrid");

                    b.ToTable("QrMst");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.StateMst", b =>
                {
                    b.Property<int>("stateid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("stateid"));

                    b.Property<int?>("CityMstcityid")
                        .HasColumnType("int");

                    b.Property<string>("statename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("stateid");

                    b.HasIndex("CityMstcityid");

                    b.ToTable("StateMsts");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.UserInstaPostHandlerMst", b =>
                {
                    b.Property<int>("userhandlerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userhandlerid"));

                    b.Property<string>("instacomment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instalike")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("instapostid")
                        .HasColumnType("int");

                    b.Property<string>("instasave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instashare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("userhandlertime")
                        .HasColumnType("datetime2");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("userhandlerid");

                    b.HasIndex("instapostid");

                    b.HasIndex("userid");

                    b.ToTable("UserInstaPostHandlerMsts");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.UserMst", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userid"));

                    b.Property<string>("areadcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contactno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profilepicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("uemail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ufname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("upassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urefreallcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("urefreallid")
                        .HasColumnType("int");

                    b.HasKey("userid");

                    b.ToTable("UserMsts");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.UserYoutubePostHandlerMst", b =>
                {
                    b.Property<int>("userhandlerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userhandlerid"));

                    b.Property<DateTime>("userhandlertime")
                        .HasColumnType("datetime2");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.Property<string>("youtubecomment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("youtubeid")
                        .HasColumnType("int");

                    b.Property<string>("youtubelike")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("youtubesave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("youtubeshare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userhandlerid");

                    b.HasIndex("userid");

                    b.HasIndex("youtubeid");

                    b.ToTable("userYoutubePostHandlerMsts");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.YouTubePostBudgetMst", b =>
                {
                    b.Property<int>("youtubepostbudgetid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("youtubepostbudgetid"));

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("youtubecommentbudget")
                        .HasColumnType("int");

                    b.Property<int>("youtubelikebudget")
                        .HasColumnType("int");

                    b.Property<int>("youtubesavebudget")
                        .HasColumnType("int");

                    b.Property<int>("youtubesharebudget")
                        .HasColumnType("int");

                    b.HasKey("youtubepostbudgetid");

                    b.ToTable("youTubePostBudgetMsts");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.YouTubePostMst", b =>
                {
                    b.Property<int>("youtubepostid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("youtubepostid"));

                    b.Property<int>("counter")
                        .HasColumnType("int");

                    b.Property<int>("youtubebranduserid")
                        .HasColumnType("int");

                    b.Property<string>("youtubepostcomment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("youtubepostcommentstatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("youtubepostendingdate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("youtubepostlikestatus")
                        .HasColumnType("bit");

                    b.Property<string>("youtubepostsave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("youtubepostsavestatus")
                        .HasColumnType("bit");

                    b.Property<string>("youtubepostshare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("youtubepostsharestatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("youtubepoststartingdate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("youtubepoststatus")
                        .HasColumnType("bit");

                    b.Property<string>("youtubeposttotalbudget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("youtubeposttotallike")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("youtubeposturl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("youtubepostid");

                    b.HasIndex("youtubebranduserid");

                    b.ToTable("YouTubePostMst");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.BrandPaymentTransactionMst", b =>
                {
                    b.HasOne("Meta_Ads_World.Data.BrandRegistrationMst", "brandRegistrationMst")
                        .WithMany()
                        .HasForeignKey("paymentbranduserid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meta_Ads_World.Data.InstaPostMst", "InstaPostMst")
                        .WithMany()
                        .HasForeignKey("paymentinstaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstaPostMst");

                    b.Navigation("brandRegistrationMst");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.BrandYouTubePaymentTransactionMst", b =>
                {
                    b.HasOne("Meta_Ads_World.Data.BrandRegistrationMst", "brandRegistrationMst")
                        .WithMany()
                        .HasForeignKey("paymentbranduserid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meta_Ads_World.Data.YouTubePostMst", "YouTubePost")
                        .WithMany()
                        .HasForeignKey("paymentyoutubeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YouTubePost");

                    b.Navigation("brandRegistrationMst");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.InstaPostMst", b =>
                {
                    b.HasOne("Meta_Ads_World.Data.BrandRegistrationMst", "BrandRegistrationMst")
                        .WithMany()
                        .HasForeignKey("instabranduserid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BrandRegistrationMst");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.StateMst", b =>
                {
                    b.HasOne("Meta_Ads_World.Data.CityMst", null)
                        .WithMany("StateMst")
                        .HasForeignKey("CityMstcityid");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.UserInstaPostHandlerMst", b =>
                {
                    b.HasOne("Meta_Ads_World.Data.InstaPostMst", "InstaPostMst")
                        .WithMany()
                        .HasForeignKey("instapostid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meta_Ads_World.Data.UserMst", "UserMst")
                        .WithMany("userInstaPostHandlerMsts")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstaPostMst");

                    b.Navigation("UserMst");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.UserYoutubePostHandlerMst", b =>
                {
                    b.HasOne("Meta_Ads_World.Data.UserMst", "UserMst")
                        .WithMany()
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meta_Ads_World.Data.YouTubePostMst", "youTubePostMst")
                        .WithMany()
                        .HasForeignKey("youtubeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserMst");

                    b.Navigation("youTubePostMst");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.YouTubePostMst", b =>
                {
                    b.HasOne("Meta_Ads_World.Data.BrandRegistrationMst", "BrandRegistrationMst")
                        .WithMany()
                        .HasForeignKey("youtubebranduserid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BrandRegistrationMst");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.CityMst", b =>
                {
                    b.Navigation("StateMst");
                });

            modelBuilder.Entity("Meta_Ads_World.Data.UserMst", b =>
                {
                    b.Navigation("userInstaPostHandlerMsts");
                });
#pragma warning restore 612, 618
        }
    }
}
